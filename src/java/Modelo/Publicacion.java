package Modelo;
// Generated 11/05/2016 04:32:45 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Publicacion generated by hbm2java
 */
@Entity
@Table(name="publicacion"
    ,schema="public"
)
public class Publicacion  implements java.io.Serializable {


     private int idPublicacion;
     private Libro libro;
     private Usuario usuario;
     private boolean finalizado;
     private Date fecha;
     private String lugarDeIntercambio;
     private Set esCandidatos = new HashSet(0);

    public Publicacion() {
    }

	
    public Publicacion(int idPublicacion, boolean finalizado, Date fecha) {
        this.idPublicacion = idPublicacion;
        this.finalizado = finalizado;
        this.fecha = fecha;
    }
    public Publicacion(int idPublicacion, Libro libro, Usuario usuario, boolean finalizado, Date fecha, String lugarDeIntercambio, Set esCandidatos) {
       this.idPublicacion = idPublicacion;
       this.libro = libro;
       this.usuario = usuario;
       this.finalizado = finalizado;
       this.fecha = fecha;
       this.lugarDeIntercambio = lugarDeIntercambio;
       this.esCandidatos = esCandidatos;
    }
   
     @Id 

    
    @Column(name="id_publicacion", unique=true, nullable=false)
    public int getIdPublicacion() {
        return this.idPublicacion;
    }
    
    public void setIdPublicacion(int idPublicacion) {
        this.idPublicacion = idPublicacion;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_libro")
    public Libro getLibro() {
        return this.libro;
    }
    
    public void setLibro(Libro libro) {
        this.libro = libro;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="elegido")
    public Usuario getUsuario() {
        return this.usuario;
    }
    
    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }

    
    @Column(name="finalizado", nullable=false)
    public boolean isFinalizado() {
        return this.finalizado;
    }
    
    public void setFinalizado(boolean finalizado) {
        this.finalizado = finalizado;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="fecha", nullable=false, length=13)
    public Date getFecha() {
        return this.fecha;
    }
    
    public void setFecha(Date fecha) {
        this.fecha = fecha;
    }

    
    @Column(name="lugar_de_intercambio")
    public String getLugarDeIntercambio() {
        return this.lugarDeIntercambio;
    }
    
    public void setLugarDeIntercambio(String lugarDeIntercambio) {
        this.lugarDeIntercambio = lugarDeIntercambio;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="publicacion")
    public Set getEsCandidatos() {
        return this.esCandidatos;
    }
    
    public void setEsCandidatos(Set esCandidatos) {
        this.esCandidatos = esCandidatos;
    }




}


